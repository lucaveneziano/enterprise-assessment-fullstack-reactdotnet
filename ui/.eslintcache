[{"E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\index.js":"1","E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\reportWebVitals.js":"2","E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\App.js":"3","E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\components\\Feed.js":"4","E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\components\\Post.js":"5","E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\components\\Admin.js":"6","E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\sampleData.js":"7","E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\components\\CreatePost.js":"8"},{"size":517,"mtime":1614318326096,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1614318326100,"results":"11","hashOfConfig":"10"},{"size":4252,"mtime":1617659176238,"results":"12","hashOfConfig":"10"},{"size":959,"mtime":1617648670834,"results":"13","hashOfConfig":"10"},{"size":1032,"mtime":1614334061164,"results":"14","hashOfConfig":"10"},{"size":1463,"mtime":1614334061162,"results":"15","hashOfConfig":"10"},{"size":5090,"mtime":1614318326100,"results":"16","hashOfConfig":"10"},{"size":2543,"mtime":1617659027631,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1hc8ykf",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\index.js",[],["38","39"],"E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\reportWebVitals.js",[],"E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\App.js",["40","41"],"E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\components\\Feed.js",["42","43"],"import React from 'react';\r\nimport samplePosts from \"../sampleData\";\r\nimport moment from 'moment';\r\n\r\nclass Feed extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.props = props;\r\n  }\r\n  \r\n  render() {\r\n      return (\r\n        <div className=\"feed\">\r\n          <ul>\r\n          {this.props.postData.sort((a, b) => a.createdAt < b.createdAt ? 1 : -1).map((post) => \r\n          <li className=\"feed-list-item\"  onClick={()=>this.props.handleClick(\"post\", post._id)}>\r\n            <div className=\"feed-list-item-title\">{post.title}</div>\r\n          <div className=\"feed-list-item-byline\"><span className=\"feed-list-item-byline-author\">{post.author}</span> {moment(post.createdAt).fromNow()}</div>\r\n            <img src={post.imageUrl} className=\"feed-list-item-image\"/>\r\n          <span className=\"feed-list-item-lede\">{post.body}</span>\r\n          </li>)}\r\n          </ul>\r\n        </div>\r\n        \r\n      );\r\n  }\r\n}\r\nexport default Feed;\r\n","E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\components\\Post.js",["44"],"import React from 'react';\r\nimport moment from 'moment';\r\n\r\nclass Post extends React.Component\r\n{\r\n  constructor(props) {\r\n    super();\r\n    this.state={\r\n      post : [],\r\n      error : null\r\n    }\r\n    this.props = props;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    fetch(\"https://127.0.0.1:5000/api/blog/\" + this.props.postid)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            post: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"post\">\r\n        <h1 className=\"post-title\">{this.state.post.title}</h1>\r\n        <div className=\"post-byline\"><span className=\"post-byline-author\">{this.state.post.author}</span> {moment(this.state.post.createdAt).fromNow()}</div>\r\n        <img src={this.state.post.imageUrl} className=\"post-image\"/>\r\n        <p>{this.state.post.body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Post;\r\n","E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\components\\Admin.js",["45","46"],"import React from 'react';\r\nimport samplePosts from \"../sampleData\";\r\nimport moment from 'moment';\r\n\r\nclass Admin extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n        posts : [],\r\n        error : null\r\n    }\r\n    this.props = props;\r\n  }\r\n  \r\n  componentDidMount() {\r\n    fetch(\"https://127.0.0.1:5000/api/blog\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            posts: result\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n  \r\n  render() {\r\n    \r\n      return (\r\n        <div className=\"admin\">\r\n          <ul>{\r\n            this.state.posts.sort((a, b) => a.createdAt < b.createdAt ? 1 : -1).map((post) => \r\n                <div className=\"admin-list-item\" \r\n                    onClick = {() => this.props.handleClick(\"post\", post._id)}>\r\n                    \r\n                    {post.title}\r\n                    <br></br>\r\n                    <span className=\"date-item\">\r\n                        {post.createdAt}\r\n                    </span>\r\n                    <br></br>\r\n                    <span className=\"views-item\">\r\n                        Views:{post.views}\r\n                    </span>\r\n                </div>)\r\n            }\r\n          </ul>\r\n        </div>\r\n      );\r\n  }\r\n}\r\nexport default Admin;","E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\sampleData.js",[],"E:\\travler\\enterprise-assessment-fullstack-reactdotnet\\ui\\src\\components\\CreatePost.js",["47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":95,"column":35,"nodeType":"54","messageId":"55","endLine":95,"endColumn":37},{"ruleId":"56","severity":1,"message":"57","line":96,"column":24,"nodeType":"58","messageId":"59","endLine":96,"endColumn":26},{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":19,"column":13,"nodeType":"66","endLine":19,"endColumn":72},{"ruleId":"64","severity":1,"message":"65","line":37,"column":9,"nodeType":"66","endLine":37,"endColumn":69},{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":19},{"ruleId":"60","severity":1,"message":"67","line":3,"column":8,"nodeType":"62","messageId":"63","endLine":3,"endColumn":14},{"ruleId":"64","severity":1,"message":"65","line":63,"column":21,"nodeType":"66","endLine":63,"endColumn":81},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'samplePosts' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'moment' is defined but never used.","no-global-assign","no-unsafe-negation"]